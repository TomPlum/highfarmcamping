extends structure

block append top-content
    p.page-title
        i.glyphicon.glyphicon-search
        |  Search Booking

block append body-content
    #booking
    .container
        .row
            .col-md-6
                form#bookingForm(onsubmit='test()')
                    label Booking ID:
                    br
                    input.form-control(type='text', name='bookingId', value='1')
                    br
                    br
                    | Or
                    br
                    br
                    label First name:
                    br
                    input.form-control(type='text', name='firstname')
                    br
                    label Last name:
                    br
                    input.form-control(type='text', name='lastname')
                    br
                    br
                    input.btn-info(type='submit', value='Search')

block append scripts
    script(type="text/javascript").

        function test()
        {
            getBookingFromDB();

        }
        //Ajax call to the DB to get customer to be deleted
        function getBookingFromDB() {
            $.ajax({
                type: 'POST',
                async: false,
                url: '/manage-booking/get-booking',
                data: {
                    'ID': document.getElementById("bookingForm").elements["bookingId"].value
                },
                success: function (data) {
                    //customer_to_be_deleted = JSON.stringify(data);
                    //document.getElementById('customer').innerHTML = "THIS IS :" + customer_to_be_deleted;
                    createTable(data);
                },
                error: function () {
                    alert("I am sorry. Booking data cannot be accessed right now. Please contact IT support.");
                }
            });
        }
        // creates booking summary:
        function createTable(data) {
            const oTable = "<table class='table table-hover table-striped table-condensed'>";
            const cTable = "</table>";
            let tBody = "<tbody>";

            //Create Table Header
            let headers = "<thead>" +
                "<tr>" +
                "<th>Booking ID</th>" +
                "<th>Customer ID</th>" +
                "<th>Customer Name</th>" +
                "<th>Booking Duration</th>" +
                "<th>Payment Total in Â£</th>" +
                "<th>Booked Pitches</th>" +
                "<th>Number of dogs</th>"
            "</tr>" +
            "</thead>";

            //Create Table Body
            tBody += "<tr>";
            tBody += "<td>" + data[0].booking_id +"</td>";
            tBody += "<td>" + data[0].customer_id +"</td>";
            tBody += "<td>" + data[0].first_name + " " + data[0].last_name + "</td>";
            tBody += "<td>" + formatDate(data[0].stay_start_date) + " - " + formatDate(data[0].stay_end_date) + "</td>";
            tBody += "<td>" + data[0].payment_total + "</td>";
            tBody += "<td> Pitch " + data[0].pitch_id + "<br>" + getIcon(data[0].type);
            // in case when one booking has several pitches:
            if (data.length > 1) {
                for (let i = 1; i < data.length; i++) {
                    tBody += "<br> Pitch " + data[i].pitch_id + "<br>" + getIcon(data[i].type);
                }
            }
            tBody+="</td>";
            tBody += "<td>" + data[0].count_dogs + "</td>";
            tBody += "</tr>";

            // To create a line to enclose booking summary:
            tBody += "<tr>";
            tBody += "<td></td>";
            tBody += "<td></td>";
            tBody += "<td></td>";
            tBody += "<td></td>";
            tBody += "<td></td>";
            tBody += "<td></td>";
            tBody += "<td></td>";
            tBody += "</tr>";

            /*if(data.length>1) {
                for (let i = 1; i < data.length; i++) {
                    tBody += "<tr>";
                    tBody += "<td></td>";
                    tBody += "<td></td>";
                    tBody += "<td></td>";
                    tBody += "<td></td>";
                    tBody += "<td></td>";
                    tBody += "<td> Pitch " + data[i].pitch_id + "<br>" + getIcon(data[i].type) + "</td>";
                    tBody += "</tr>";
                }
            }*/

            tBody += "</tbody>";
            document.getElementById('booking').innerHTML=oTable + headers + tBody + cTable;
        }

        function getIcon(type) {
            const all_weather = "<span class='fa fa-cloud'></span>";
            const tent = "<span class='glyphicon glyphicon-tent'></span>";
            const caravan = "<span class='fa fa-car'></span>";
            const motorhome = "<span class='fa fa-truck'></span>";
            const electrical = "<span class='fa fa-lightbulb'></span>";

            switch (type) {
                case "tent":
                    return tent;
                case "caravan":
                    return caravan + " " + all_weather;
                case "motorhome":
                    return motorhome + " " + all_weather + electrical;
                case "all":
                    return tent + " " + caravan + " " + motorhome + " " + electrical;
                default:
                    return "N/A";
            }
        }
        function formatDate(date) {
            date = new Date(date);
            let DD = date.getDate();
            if (DD < 10) {
                DD = "0" + DD;
            }
            let MM = date.getMonth() +1;
            if (MM < 10) {
                MM = "0" + MM;
            }
            const YYYY = date.getFullYear();
            return DD + "/" + MM + "/" + YYYY;
        }

